# Google Cloud Build Configuration f√∂r Felicia's Finance
# Detta automatiserar bygg och deployment av crypto-systemet

steps:
  # =============================================================================
  # SETUP AND AUTHENTICATION
  # =============================================================================
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'setup-project'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud config set project $PROJECT_ID
        gcloud config set run/region $BUILD_REGION
        echo "Project configured: $PROJECT_ID"

  # =============================================================================
  # BUILD WEB3 PROVIDER SERVICE
  # =============================================================================
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-web3-provider'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/web3-provider:$COMMIT_SHA'
      - '-f'
      - 'infrastructure/docker/Dockerfile.web3-provider'
      - '.'

  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-web3-provider'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/web3-provider:$COMMIT_SHA'

  # =============================================================================
  # BUILD BIGQUERY SERVICE
  # =============================================================================
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-bigquery-service'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/bigquery-service:$COMMIT_SHA'
      - '-f'
      - 'infrastructure/docker/Dockerfile.bigquery-service'
      - '.'

  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-bigquery-service'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/bigquery-service:$COMMIT_SHA'

  # =============================================================================
  # DEPLOY TO CLOUD RUN
  # =============================================================================
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-web3-provider'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'web3-provider'
      - '--image'
      - 'gcr.io/$PROJECT_ID/web3-provider:$COMMIT_SHA'
      - '--region'
      - '$BUILD_REGION'
      - '--platform'
      - 'managed'
      - '--service-account'
      - 'web3-provider-sa@$PROJECT_ID.iam.gserviceaccount.com'
      - '--allow-unauthenticated'
      - '--memory'
      - '2Gi'
      - '--cpu'
      - '1'
      - '--min-instances'
      - '1'
      - '--max-instances'
      - '10'
      - '--set-env-vars'
      - 'GOOGLE_CLOUD_PROJECT_ID=$PROJECT_ID,WEB3_GATEWAY_ENABLED=true,ENVIRONMENT=production'

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-bigquery-service'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'bigquery-service'
      - '--image'
      - 'gcr.io/$PROJECT_ID/bigquery-service:$COMMIT_SHA'
      - '--region'
      - '$BUILD_REGION'
      - '--platform'
      - 'managed'
      - '--service-account'
      - 'bigquery-service-sa@$PROJECT_ID.iam.gserviceaccount.com'
      - '--allow-unauthenticated'
      - '--memory'
      - '4Gi'
      - '--cpu'
      - '2'
      - '--min-instances'
      - '1'
      - '--max-instances'
      - '5'
      - '--set-env-vars'
      - 'GOOGLE_CLOUD_PROJECT_ID=$PROJECT_ID,BIGQUERY_DATASET_TRADING=trading_analytics,BIGQUERY_DATASET_PORTFOLIO=portfolio_tracking,ENVIRONMENT=production'

  # =============================================================================
  # VALIDATION TESTS
  # =============================================================================
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'validate-deployment'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Validating deployment..."

        # Wait for services to be ready
        sleep 30

        # Get service URLs
        WEB3_URL=$(gcloud run services describe web3-provider --region=$BUILD_REGION --format="value(status.url)")
        BIGQUERY_URL=$(gcloud run services describe bigquery-service --region=$BUILD_REGION --format="value(status.url)")

        echo "Web3 Provider URL: $WEB3_URL"
        echo "BigQuery Service URL: $BIGQUERY_URL"

        # Test health endpoints
        if curl -f "$WEB3_URL/health" && curl -f "$BIGQUERY_URL/health"; then
          echo "‚úÖ Health checks passed"
        else
          echo "‚ùå Health checks failed"
          exit 1
        fi

        echo "‚úÖ Deployment validation successful"

  # =============================================================================
  # NOTIFICATION
  # =============================================================================
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'send-notification'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "üöÄ Felicia's Finance deployment completed successfully!"
        echo "Commit: $COMMIT_SHA"
        echo "Project: $PROJECT_ID"
        echo "Region: $BUILD_REGION"

        # Get service URLs for notification
        WEB3_URL=$(gcloud run services describe web3-provider --region=$BUILD_REGION --format="value(status.url)")
        BIGQUERY_URL=$(gcloud run services describe bigquery-service --region=$BUILD_REGION --format="value(status.url)")

        echo "Services deployed:"
        echo "üåê Web3 Provider: $WEB3_URL"
        echo "üìä BigQuery Service: $BIGQUERY_URL"

        echo "üìä View monitoring dashboard:"
        echo "https://console.cloud.google.com/monitoring/dashboards?project=$PROJECT_ID"

# =============================================================================
# BUILD OPTIONS
# =============================================================================

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'

# =============================================================================
# SUBSTITUTION VARIABLES
# =============================================================================

substitutions:
  _PROJECT_ID: 'felicia-finance-prod'
  _BUILD_REGION: 'europe-west1'

timeout: '1200s'  # 20 minutes

# =============================================================================
# TRIGGER CONFIGURATION
# =============================================================================

# This build can be triggered by:
# 1. GitHub webhook on push to main branch
# 2. Manual trigger from Google Cloud Console
# 3. API call to Cloud Build